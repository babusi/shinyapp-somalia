PI <- PA <- PD <- rep(NA, len)
for (t in start:end){
A<- before.long[(t- 1),"Shabeellaha_Dhexe_BeforeRegion"]
B<- conflicts.long[(t- 1),"Awdal_Conflict"]
C<- fatalities.long[(t- 9),"Bari_Fatalities"]
D<- fatalities.long[(t- 9),"Bari_Fatalities"]
E<- future.long[(t- 1),"Bakool_FutureRegion"]
G<- current.long[(t- 1),"Galgaduud_CurrentRegion"]
H<- before.long[(t- 1),"Bari_BeforeRegion"]
I<- current.long[(t- 1),"Woqooyi_Galbeed_CurrentRegion"]
J<- fatalities.long[(t- 9),"Bari_Fatalities"]
K<- future.long[(t- 1),"Bakool_FutureRegion"]
L<- current.long[(t- 1),"Galgaduud_CurrentRegion"]
M<- before.long[(t- 1),"Shabeellaha_Dhexe_BeforeRegion"]
N<- conflicts.long[(t- 1),"Awdal_Conflict"]
O<- fatalities.long[(t- 9),"Bari_Fatalities"]
P<- future.long[(t- 1),"Gedo_FutureRegion"]
Q<- current.long[(t- 1),"Banadir_CurrentRegion"]
R<- min(0.152346815708488*B, C,na.rm=TRUE)
if ( is.na(D) ){S<- H}
else if(D>0){S<- 0.00038013677579467*E*G }
else{S<- H }
U<- max(sum(384.939466657484 , A*R , S,na.rm=TRUE), 0.160505532453264*I,na.rm=TRUE)
V<- tan(0.00038013677579467*K*L)
W<- min(0.152346815708488*N, O,na.rm=TRUE)
X<- tan(M*W)
if(is.infinite(U)){U <- 0 }
if(is.infinite(J)){J <- 0 }
if(is.infinite(V)){V <- 0 }
if(is.infinite(X)){X <- 0 }
if(is.infinite(P)){P <- 0 }
if(is.infinite(Q)){Q <- 0 }
FIN <-sum( U , -J , -V , -X , -4.64742734901024e-5*P*Q,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
write.csv(as.data.frame(PA[1:length(PA)]), file ="results.csv",row.names = FALSE)
return(PA)
}
MJ_9arrivals <- function(start, end){
len = 97
PI <- PA <- PD <- rep(NA, len)
for (t in start:end){
A<- current.long[(t- 1),"Galgaduud_CurrentRegion"]
B<- mean(future.long[(t-6):(t- 1),"Bakool_FutureRegion"], na.rm=TRUE)
C<- conflicts.long[(t- 1),"Awdal_Conflict"]
D<- fatalities.long[(t- 1),"Togdheer_Fatalities"]
E<- before.long[(t- 1),"Shabeellaha_Dhexe_BeforeRegion"]
G<- current.long[(t- 1),"Woqooyi_Galbeed_CurrentRegion"]
H<- fatalities.long[(t- 1),"Gedo_Fatalities"]
I<- rivers.long[(t- 3),"Juba_Dhexe_BualleStation_Juba_River"]
J<- conflicts.long[(t- 1),"Awdal_Conflict"]
K<- fatalities.long[(t- 1),"Togdheer_Fatalities"]
L<- before.long[(t- 1),"Shabeellaha_Dhexe_BeforeRegion"]
M<- fatalities.long[(t- 1),"Bari_Fatalities"]
N<- current.long[(t- 1),"Banadir_CurrentRegion"]
O<- mean(future.long[(t-10):(t- 1),"Gedo_FutureRegion"], na.rm=TRUE)
P<- max(0.000492063306548717*A*B, 0.049922717432803*C*D*E,na.rm=TRUE)
Q<- max(424, 0.1641743664885*G,na.rm=TRUE)
R<- atan2(0.049922717432803*J*K*L, M)
S<- max(Q, H*I*R,na.rm=TRUE)
if(is.infinite(P)){P <- 0 }
if(is.infinite(S)){S <- 0 }
if(is.infinite(N)){N <- 0 }
if(is.infinite(O)){O <- 0 }
FIN <-sum( P , S , -8.31757418929373e-5*N*O,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
write.csv(as.data.frame(PA[1:length(PA)]), file ="results.csv",row.names = FALSE)
return(PA)
}
LJ_8arrivals <- function(start, end){
len = 97
PI <- PA <- PD <- rep(NA, len)
for (t in start:end){
A<- conflicts.long[(t- 1),"Awdal_Conflict"]
B<- before.long[(t- 11),"Sanaag_BeforeRegion"]
C<- fatalities.long[(t- 1),"Sanaag_Fatalities"]
D<- rain.long[(t- 11),"Shabeellaha_Dhexe_rain"]
E<- median(rain.long[(t-7):(t- 1),"Bari_rain"], na.rm=TRUE)
G<- rain.long[(t- 9),"Bakool_rain"]
H<- mean(future.long[(t-8):(t- 1),"Galgaduud_FutureRegion"], na.rm=TRUE)
I<- future.long[(t- 1),"Togdheer_FutureRegion"]
J<- rain.long[(t- 9),"Bakool_rain"]
K<- mean(rain.long[(t-10):(t- 1),"Bari_rain"], na.rm=TRUE)
L<- current.long[(t- 1),"Woqooyi_Galbeed_CurrentRegion"]
M<- conflicts.long[(t- 2),"Jubbada_Dhexe_Conflict"]
N<- future.long[(t- 11),"Galgaduud_FutureRegion"]
O<- median(current.long[(t-11):(t- 1),"Gedo_CurrentRegion"], na.rm=TRUE)
P<- max(I, J*K,na.rm=TRUE)
Q<- max(sum(0.606757439691736*L , M*N,na.rm=TRUE), O,na.rm=TRUE)
if(is.infinite(A)){A <- 0 }
if(is.infinite(B)){B <- 0 }
if(is.infinite(C)){C <- 0 }
if(is.infinite(D)){D <- 0 }
if(is.infinite(E)){E <- 0 }
if(is.infinite(G)){G <- 0 }
if(is.infinite(H)){H <- 0 }
if(is.infinite(P)){P <- 0 }
if(is.infinite(Q)){Q <- 0 }
FIN <-sum( 1.95263185850796*A*B , C*D*E , G , H , P , Q , -328.786062457441,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
write.csv(as.data.frame(PA[1:length(PA)]), file ="results.csv",row.names = FALSE)
return(PA)
}
LJ_1Xarrivals <- function(start, end){
len = 97
PI <- PA <- PD <- rep(NA, len)
for (t in start:end){
A<- fatalities.long[(t- 1),"Sanaag_Fatalities"]
B<- fatalities.long[(t- 1),"Shabeellaha_Dhexe_Fatalities"]
C<- rain.long[(t- 1),"Awdal_rain"]
D<- conflicts.long[(t- 1),"Bay_Conflict"]
E<- fatalities.long[(t- 1),"Bari_Fatalities"]
G<- median(rivers.long[(t-4):(t- 1),"Hiiraan_Bulo_Burti_StationShabelle_River"], na.rm=TRUE)
H<- current.long[(t- 17),"Nugaal_CurrentRegion"]
I<- median(before.long[(t-10):(t- 1),"Gedo_BeforeRegion"], na.rm=TRUE)
J<- conflicts.long[(t- 3),"Bay_Conflict"]
K<- goats.long[(t- 1),"Hiiraan_goatprice"]
L<- current.long[(t- 1),"Awdal_CurrentRegion"]
M<- mean(current.long[(t-5):(t- 1),"Hiiraan_CurrentRegion"], na.rm=TRUE)
N<- fatalities.long[(t- 1),"Bari_Fatalities"]
O<- mean(rain.long[(t-4):(t- 1),"Awdal_rain"], na.rm=TRUE)
P<- before.long[(t- 1),"Shabeellaha_Hoose_BeforeRegion"]
Q<- current.long[(t- 1),"Awdal_CurrentRegion"]
if ( is.na(J) ){R<- M}
else if(J>0){R<- 5.03026963301009e-6*K*L }
else{R<- M }
if(is.infinite(A)){A <- 0 }
if(is.infinite(B)){B <- 0 }
if(is.infinite(C)){C <- 0 }
if(is.infinite(D)){D <- 0 }
if(is.infinite(E)){E <- 0 }
if(is.infinite(G)){G <- 0 }
if(is.infinite(H)){H <- 0 }
if(is.infinite(I)){I <- 0 }
if(is.infinite(R)){R <- 0 }
if(is.infinite(N)){N <- 0 }
if(is.infinite(O)){O <- 0 }
if(is.infinite(P)){P <- 0 }
if(is.infinite(Q)){Q <- 0 }
FIN <-sum( A*B*C , D*E*G , H , I , R , -N*O , -0.000115842576271141*P*Q,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
write.csv(as.data.frame(PA[1:length(PA)]), file ="results.csv",row.names = FALSE)
return(PA)
}
LJ_9Xarrivals <- function(start, end){
len = 97
PI <- PA <- PD <- rep(NA, len)
for (t in start:end){
A<- conflicts.long[(t- 3),"Shabeellaha_Hoose_Conflict"]
B<- median(fatalities.long[(t-10):(t- 1),"Bay_Fatalities"], na.rm=TRUE)
C<- rain.long[(t- 5),"Bay_rain"]
D<- fatalities.long[(t- 7),"Togdheer_Fatalities"]
E<- before.long[(t- 1),"Shabeellaha_Dhexe_BeforeRegion"]
G<- mean(conflicts.long[(t-3):(t- 1),"Gedo_Conflict"], na.rm=TRUE)
H<- before.long[(t- 1),"Woqooyi_Galbeed_BeforeRegion"]
I<- mean(current.long[(t-3):(t- 1),"Woqooyi_Galbeed_CurrentRegion"], na.rm=TRUE)
J<- median(before.long[(t-17):(t- 1),"Hiiraan_BeforeRegion"], na.rm=TRUE)
K<- rain.long[(t- 5),"Woqooyi_Galbeed_rain"]
L<- mean(fatalities.long[(t-5):(t- 1),"Galguduud_Fatalities"], na.rm=TRUE)
M<- rain.long[(t- 6),"Shabeellaha_Dhexe_rain"]
N<- mean(fatalities.long[(t-10):(t- 1),"Sool_Fatalities"], na.rm=TRUE)
O<- median(fatalities.long[(t-17):(t- 1),"Sool_Fatalities"], na.rm=TRUE)
P<- conflicts.long[(t- 3),"Shabeellaha_Hoose_Conflict"]
Q<- max(A*B, C*D,na.rm=TRUE)
R<- max(I, 9.36406661543063*J,na.rm=TRUE)
S<- max(E*G/H, R,na.rm=TRUE)
U<- max(sum(K*L , M*N*O,na.rm=TRUE), P,na.rm=TRUE)
if(is.infinite(Q)){Q <- 0 }
if(is.infinite(S)){S <- 0 }
if(is.infinite(U)){U <- 0 }
FIN <-sum( Q , S , U , -1796.93556600875,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
write.csv(as.data.frame(PA[1:length(PA)]), file ="results.csv",row.names = FALSE)
return(PA)
}
fmonths_start <- which(conflicts.long$Date == monthStart(as.Date("2017-01-01")))
fmonths_end <- which(conflicts.long$Date == monthStart(as.Date("2018-01-01")))
region <- "Jubbada_Hoose"
reg_con <- paste(region,"Conflict",sep="_")
reg_arr <- paste(region,"CurrentRegion",sep="_")
reg_dep <- paste(region,"BeforeRegion",sep="_")
reg_rain <- paste(region,"rain",sep="_")
I <- conflicts.long[ fmonths_start:fmonths_end,reg_con]
A <- current.long[ fmonths_start:fmonths_end, reg_arr ]
D <- before.long[ fmonths_start:fmonths_end, reg_dep ]
#AA <- A[(total_len-30):total_len]
R <- rain.long[ fmonths_start:fmonths_end, reg_rain]
len <- fmonths_end - fmonths_start+1
PI <- PA <- PD <- rep(NA, len)
PA <- LJ_8arrivals(fmonths_start, fmonths_end)
PI <- PA[fmonths_start:fmonths_end]
PB <- LJ_1Xarrivals(fmonths_start, fmonths_end)
PJ <- PB[fmonths_start:fmonths_end]
PC <- LJ_9Xarrivals(fmonths_start, fmonths_end)
PK <- PC[fmonths_start:fmonths_end]
A<- A[1:len]
Date <- conflicts.long$Date[fmonths_start:fmonths_end]
long <- data.frame(
Period=rep((1:len),2),
Date=Date,
Actual_Arrivals = A,
Algorithm_1 = as.integer(PI),
Algorithm_2 = as.integer(PJ),
Algorithm_3 = as.integer(PK))
Actual_Arrivals <- A
Model_Arrivals <- PI
Date <- Date
wide <- cbind(Date = format(Date,"%Y %b"),
Actual_Arrivals = as.integer(Actual_Arrivals),
Model_Arrivals =as.integer(Model_Arrivals))
list(long=long, wide=wide)
long <- data.frame(
Period=rep((1:len),2),
Date=format(Date,"%Y %b"),
Actual_Arrivals = A,
Algorithm_1 = as.integer(PI),
Algorithm_2 = as.integer(PJ),
Algorithm_3 = as.integer(PK))
long
long <- pred_data()[["long"]]
econ <- transform(long, date = as.character(Date))
econ
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
return(m1)
m1
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
long <- data.frame(
Period=rep((1:len),2),
Date=Date,
Actual_Arrivals = A,
Algorithm_1 = as.integer(PI),
Algorithm_2 = as.integer(PJ),
Algorithm_3 = as.integer(PK))
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
m1
long
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
Date <- conflicts.long$Date[fmonths_start:fmonths_end]
long <- data.frame(
Period=rep((1:len),2),
Date=Date,
Actual_Arrivals = A,
Algorithm_1 = as.integer(PI),
Algorithm_2 = as.integer(PJ),
Algorithm_3 = as.integer(PK))
Actual_Arrivals <- A
Model_Arrivals <- PI
Date <- Date
wide <- cbind(Date = format(Date,"%Y %b"),
Actual_Arrivals = as.integer(Actual_Arrivals),
Model_Arrivals =as.integer(Model_Arrivals))
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
as.character.Date(Date)
runApp()
format(Date,"%Y %b")
Date <- format(Date,"%Y %b")
Date
as.character(Date)
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
m1
econ
econ <- transform(long, date = as.character(Date))
econ
A<- A[1:len]
Date <- conflicts.long$Date[fmonths_start:fmonths_end]
long <- data.frame(
Period=rep((1:len),2),
Date=format(Date,"%Y %b"),
Actual_Arrivals = A,
Algorithm_1 = as.integer(PI),
Algorithm_2 = as.integer(PJ),
Algorithm_3 = as.integer(PK))
lonf
long
econ <- transform(long, date = as.character(Date))
econ
econ
runApp()
runApp()
runApp()
m1
m1$xAxis
runApp()
A<- A[1:len]
Date <- conflicts.long$Date[fmonths_start:fmonths_end]
long <- data.frame(
Period=rep((1:len),2),
Date= Date,
Actual_Arrivals = A,
Algorithm_1 = as.integer(PI),
Algorithm_2 = as.integer(PJ),
Algorithm_3 = as.integer(PK))
long
econ <- transform(long, date = as.character(Date))
econ
typeof(long.date)
typeof(long$Date)
typeof(long$date)
long.date
econ.date
econ$date
typeof(econ$date)
typeof(econ$Date)
runApp()
runApp()
mPlot()
runApp()
econ <- transform(long, date = as.character(format(Date,"%Y %b")))
econ
m1$set(xlabels = "date")
m1
econ <- transform(long, date = as.character(format(Date,"%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1$set(xlabeafsls = "date")
econ <- transform(long, date = as.character(format(Date,"%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
m1
m1$set(xLabelFormat=format(Date,"%Y %b"))
m
m1
econ <- transform(long, date = as.character(format(Date,"%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1$set(xLabelFormat=format(Date,"%Y %b"))
m1
m1$set(xLabelFormat="%Y %b")
m1
econ <- transform(long, date = as.character(format(Date,"%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
return(m1)
m1
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
m1$set(xLabelFormat="%Y %b")
m1
m1$set(xLabelFormat="#function(x) {return(econ.date.format("%Y %b"))}#")
m1$set(xLabelFormat="#function(x) {return(econ.date.format("%Y %b"));}#")
m1$set()
m1$set(xLabelFormat)
m1$set(xLabelFormat = "n;a")
m1
m1$set(xLabelFormat="#!function(x) {return(econ.date.format("%Y %b"));}!#")
econ <- transform(long, date = as.character(strptime(long$Date, format = "%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ <- transform(long, date = as.character(strptime(long$Date, format = "%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
econ
econ <- transform(long, date = as.character(strptime(Date, format = "%Y %b")))
exon
econ
econ <- transform(long, Date = as.character(strptime(Date, format = "%Y %b")))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
econ
econ <- transform(long, Date = as.character(strptime(long$Date, format = "%Y %b")))
econ <- transform(long, Date = as.character(strptime(long$Date, format = "%Y %b")))
econ
as.character(strptime(long$Date, format = "%Y %b"))
long$Date
as.character(strptime(Date =  format = "%Y %b"))
as.character(strptime(long$Date, transform(df1, Date = as.character(strptime(df1$Date, format = "%Y%m%d")))format = "%Y %b"))
transform(long, Date = as.character(strptime(long$Date, format = "%Y%m%d")))
transform(long, Date = as.character(strptime(long$Date, format = "%Y%m%d")))
Date = as.character(strptime(long$Date, format = "%Y%m%d"))
Date
Date = as.character(strptime(long$Date, format = "%Y-%m-%d"))
Date
Date = as.character(format(strptime(long$Date, format = "%Y-%m-%d"),"%Y %b"))
Date
econ <- transform(long, Date = as.character(format(strptime(long$Date, format = "%Y-%m-%d"),"%Y %b")))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ <- transform(long, Date = as.character(format(strptime(long$Date, format = "%Y-%m-%d"),"%Y %b")))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
return(m1)
date
long.date
long$Date
long$Date
runApp()
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "Date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
long
econ
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
return(m1)
m1
econ
econ <- transform(long, date = as.character(format(strptime(long$Date, format = "%Y-%m-%d"),"%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ
econ <- transform(long, date = as.character(format(strptime(long$Date, format = "%Y-%m-%d"),"%Y %b")))
m1 <- mPlot(x = c("date","Date"), y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ <- transform(long, date = as.character(format(strptime(long$Date, format = "%Y-%m-%d"),"%Y %b")))
m1 <- mPlot(x = c("date"), y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
runApp()
econ <- transform(long, date = as.character(Date))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
econ <- transform(long, date = as.character(Algorithm_1))
econ <- transform(long, hate = as.character(Algorithm_1))
econ
econ <- transform(long, date = as.character(Date))
econ <- transform(long, hate = as.character(Algorithm_1))
econ <- transform(long, date = as.character(format(Date,"%Y %b")))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
runApp()
econ <- transform(long, date = as.character(format(Date,"%b %Y")))
econ <- transform(long, hate = as.character(Algorithm_1))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ <- transform(long, date = as.character(format(Date,"%b %Y")))
#econ <- transform(long, hate = as.character(Algorithm_1))
m1 <- mPlot(x = "date", y = c("Actual_Arrivals","Algorithm_1", "Algorithm_2", "Algorithm_3"), type = "Line", data = econ)
#m1$addParams(height = 500, dom = 'graph1')
#m1$set(xLabelFormat = "Date")
m1$set(lineColors=c("blue", "red", "purple", "#FF00FF"))
m1
econ$date
levels()
levels(Date)
levels(long$Date)
levels(long$date)
runApp()
runApp()
